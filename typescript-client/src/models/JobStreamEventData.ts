/* tslint:disable */
/* eslint-disable */
/**
 * Cozy Creator
 * Cozy Creator OpenAPI specification
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobStatus } from './JobStatus';
import {
    JobStatusFromJSON,
    JobStatusFromJSONTyped,
    JobStatusToJSON,
    JobStatusToJSONTyped,
} from './JobStatus';

/**
 * An event that occurred for a job
 * @export
 * @interface JobStreamEventData
 */
export interface JobStreamEventData {
    /**
     * Unique identifier for the job
     * @type {string}
     * @memberof JobStreamEventData
     */
    jobId: string;
    /**
     * URL of the generated image
     * @type {string}
     * @memberof JobStreamEventData
     */
    url?: string;
    /**
     * Model used to generate the image (e.g., 'sdxl')
     * @type {string}
     * @memberof JobStreamEventData
     */
    model?: string;
    /**
     * 
     * @type {JobStatus}
     * @memberof JobStreamEventData
     */
    status?: JobStatus;
}



/**
 * Check if a given object implements the JobStreamEventData interface.
 */
export function instanceOfJobStreamEventData(value: object): value is JobStreamEventData {
    if (!('jobId' in value) || value['jobId'] === undefined) return false;
    return true;
}

export function JobStreamEventDataFromJSON(json: any): JobStreamEventData {
    return JobStreamEventDataFromJSONTyped(json, false);
}

export function JobStreamEventDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobStreamEventData {
    if (json == null) {
        return json;
    }
    return {
        
        'jobId': json['job_id'],
        'url': json['url'] == null ? undefined : json['url'],
        'model': json['model'] == null ? undefined : json['model'],
        'status': json['status'] == null ? undefined : JobStatusFromJSON(json['status']),
    };
}

  export function JobStreamEventDataToJSON(json: any): JobStreamEventData {
      return JobStreamEventDataToJSONTyped(json, false);
  }

  export function JobStreamEventDataToJSONTyped(value?: JobStreamEventData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'job_id': value['jobId'],
        'url': value['url'],
        'model': value['model'],
        'status': JobStatusToJSON(value['status']),
    };
}

