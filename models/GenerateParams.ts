/* tslint:disable */
/* eslint-disable */
/**
 * Cozy Creator
 * Cozy Creator OpenAPI specification
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GenerateParams
 */
export interface GenerateParams {
    /**
     * The unique identifier for the generation request
     * @type {string}
     * @memberof GenerateParams
     */
    id: string;
    /**
     * A map of models to their respective values
     * @type {{ [key: string]: number; }}
     * @memberof GenerateParams
     */
    models: { [key: string]: number; };
    /**
     * The random seed to be used for generation
     * @type {number}
     * @memberof GenerateParams
     */
    randomSeed: number;
    /**
     * Aspect ratio for the generated content
     * @type {string}
     * @memberof GenerateParams
     */
    aspectRatio: string;
    /**
     * A positive prompt to guide the generation
     * @type {string}
     * @memberof GenerateParams
     */
    positivePrompt: string;
    /**
     * A negative prompt to exclude certain elements
     * @type {string}
     * @memberof GenerateParams
     */
    negativePrompt?: string;
    /**
     * The desired output format (e.g., png, jpg)
     * @type {string}
     * @memberof GenerateParams
     */
    outputFormat: string;
}

/**
 * Check if a given object implements the GenerateParams interface.
 */
export function instanceOfGenerateParams(value: object): value is GenerateParams {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('models' in value) || value['models'] === undefined) return false;
    if (!('randomSeed' in value) || value['randomSeed'] === undefined) return false;
    if (!('aspectRatio' in value) || value['aspectRatio'] === undefined) return false;
    if (!('positivePrompt' in value) || value['positivePrompt'] === undefined) return false;
    if (!('outputFormat' in value) || value['outputFormat'] === undefined) return false;
    return true;
}

export function GenerateParamsFromJSON(json: any): GenerateParams {
    return GenerateParamsFromJSONTyped(json, false);
}

export function GenerateParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateParams {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'models': json['models'],
        'randomSeed': json['random_seed'],
        'aspectRatio': json['aspect_ratio'],
        'positivePrompt': json['positive_prompt'],
        'negativePrompt': json['negative_prompt'] == null ? undefined : json['negative_prompt'],
        'outputFormat': json['output_format'],
    };
}

  export function GenerateParamsToJSON(json: any): GenerateParams {
      return GenerateParamsToJSONTyped(json, false);
  }

  export function GenerateParamsToJSONTyped(value?: GenerateParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'models': value['models'],
        'random_seed': value['randomSeed'],
        'aspect_ratio': value['aspectRatio'],
        'positive_prompt': value['positivePrompt'],
        'negative_prompt': value['negativePrompt'],
        'output_format': value['outputFormat'],
    };
}

